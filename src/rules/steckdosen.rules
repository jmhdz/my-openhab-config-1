// waschkeller.rules / 20150326
// Marianne Spiller <github@spiller.me>
// openhab-1.7.0-SNAPSHOT

var Number Var_WH
// Anbieterpreis f√ºr KWh incl. MwSt.
var Number Naturkraft_KWH=0.51 // Naturkraft 14.5.2015

/////// Waschmaschine
//----------------------------------------------------------
// Umrechnung der Wh in KWh
//
rule "Berechne KWh"
when
  Item UG_Wirtschaftsraum_Waschmaschine_Gesamtverbrauch changed
then
  Var_WH = UG_Wirtschaftsraum_Waschmaschine_Gesamtverbrauch.state as DecimalType
  var Number Var_KWH = Var_WH / 1000
  UG_Wirtschaftsraum_Waschmaschine_Gesamtverbrauch_KWH.postUpdate(Var_KWH)
end

//----------------------------------------------------------
// Berechnung der bisher vom Geraet verursachten Kosten
//
rule "Berechne Kosten Waschmaschine"
when
  Item UG_Wirtschaftsraum_Waschmaschine_Gesamtverbrauch_KWH changed
then
  var Number Var_KWH = UG_Wirtschaftsraum_Waschmaschine_Gesamtverbrauch_KWH.state as DecimalType
  var Number Kosten = Var_KWH * Naturkraft_KWH
  UG_Wirtschaftsraum_Waschmaschine_Summe.postUpdate(Kosten)
end

//----------------------------------------------------------
// Update Last changed
//
rule "Update CCU2_Waschmaschine_LastUpdate"
when
  Item UG_Wirtschaftsraum_CCU2_Waschmaschine changed to ON
then
  UG_Wirtschaftsraum_CCU2_Waschmaschine_LastUpdate.postUpdate( now.toString() )
end

/////// Geschirrspueler
//----------------------------------------------------------
// Umrechnung der Wh in KWh
//
rule "Berechne KWh"
when
  Item EG_Kueche_Geschirrspueler_Gesamtverbrauch changed
then
  Var_WH = EG_Kueche_Geschirrspueler_Gesamtverbrauch.state as DecimalType
  var Number Var_KWH = Var_WH / 1000
  EG_Kueche_Geschirrspueler_Gesamtverbrauch_KWH.postUpdate(Var_KWH)
end

//----------------------------------------------------------
// Berechnung der bisher vom Geraet verursachten Kosten
//
rule "Berechne Kosten Geschirrspueler"
when
  Item EG_Kueche_Geschirrspueler_Gesamtverbrauch_KWH changed
then
  var Number Var_KWH = EG_Kueche_Geschirrspueler_Gesamtverbrauch_KWH.state as DecimalType
  var Number Kosten = Var_KWH * Naturkraft_KWH
  EG_Kueche_Geschirrspueler_Summe.postUpdate(Kosten)
end

//----------------------------------------------------------
// Update Last changed
//
rule "Update CCU2_Geschirrspueler_LastUpdate"
when
  Item EG_Kueche_CCU2_Geschirrspueler changed to ON
then
  EG_Kueche_CCU2_Geschirrspueler_LastUpdate.postUpdate( now.toString() )
end

/////// Luftentfeuchter
//----------------------------------------------------------
// Umrechnung der Wh in KWh
//
rule "Berechne KWh"
when
  Item UG_Sauna_Luftentfeuchter_Gesamtverbrauch changed
then
  Var_WH = UG_Sauna_Luftentfeuchter_Gesamtverbrauch.state as DecimalType
  var Number Var_KWH = Var_WH / 1000
  UG_Sauna_Luftentfeuchter_Gesamtverbrauch_KWH.postUpdate(Var_KWH)
end

//----------------------------------------------------------
// Berechnung der bisher vom Geraet verursachten Kosten
//
rule "Berechne Kosten Geschirrspueler"
when
  Item UG_Sauna_Luftentfeuchter_Gesamtverbrauch_KWH changed
then
  var Number Var_KWH = UG_Sauna_Luftentfeuchter_Gesamtverbrauch_KWH.state as DecimalType
  var Number Kosten = Var_KWH * Naturkraft_KWH
  UG_Sauna_Luftentfeuchter_Summe.postUpdate(Kosten)
end

//----------------------------------------------------------
// Schalte Gelsenstecker ein wenn jemand zu Hause ist
//
rule "Gelsenstecker ein am Abend"
when
    // um 21:00
    Time cron "0 0 21 * * ?" or
    Item mode_night changed to ON or
    Item OG_Schlafzimmer_Door_left changed to OPEN or
    Item OG_Schlafzimmer_Door_right changed to OPEN
then
    if (auto_gelsenstecker.state == ON) {  // Automatik sollte aktiviert sein
      if ((JemandDa.state == ON) && (mode_night.state == ON)) { // wenn jemand da ist, Nacht oder 21h ist
        if (( OG_Schlafzimmer_Door_left.state == OPEN ) || ( OG_Schlafzimmer_Door_right.state == OPEN )) { // Tuer wird geoeffnet
          logInfo("GelsensteckerRule", "Schalte Gelsenstecker ein.")
          OG_Schlafzimmer_Power_Gelsenstecker.sendCommand(ON)
        }
      }
    } else {
      logInfo("GelsensteckerRule", "Gelsensteckerautomatik ist [{}].", auto_gelsenstecker.state)
    }
end

//----------------------------------------------------------
// Schalte Gelsenstecker aus
//
rule "Gelsenstecker aus"
when
    // um 03:00
    Time cron "0 0 6 * * ?" or
    Item mode_night changed to OFF or
    Item OG_Schlafzimmer_Door_left changed to CLOSED or
    Item OG_Schlafzimmer_Door_right changed to CLOSED
then
    if (auto_gelsenstecker.state == ON) {
      if ( (( OG_Schlafzimmer_Door_left.state == OPEN ) || ( OG_Schlafzimmer_Door_right.state == OPEN )) && mode_night.state == ON) {
        logInfo("GelsensteckerRule", "Tuer links ist [{}], Tuer rechts ist [{}], Nacht [{}]. Lasse Gelsenstecker an.", OG_Schlafzimmer_Door_left.state, OG_Schlafzimmer_Door_right.state, mode_night.state)
      } else {
        logInfo("GelsensteckerRule", "Schalte Gelsenstecker aus. Tuer links [{}], Tuer rechts [{}], Nacht [{}]", OG_Schlafzimmer_Door_left.state, OG_Schlafzimmer_Door_right.state, mode_night.state)
        OG_Schlafzimmer_Power_Gelsenstecker.sendCommand(OFF)
      }
    }
end

rule "RFX Toggle Zwave Schlafzimmer"
when
    Item Virtual_Remote_HE_4 changed
then
   if (Virtual_Remote_HE_4.state == ON ) {
      OG_Schlafzimmer_Power_Lamp.sendCommand(100)
    } else {
      OG_Schlafzimmer_Power_Lamp.sendCommand(0)
    }
end

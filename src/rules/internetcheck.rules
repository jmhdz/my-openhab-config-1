var Timer internetTimer = null
var Timer cycleTimer = null

//----------------------------------------------------------
// Every now and then the Modem stops responding.
// We take care of that.

rule "Reset Internet connection if no change for 2 min"
when
    Item Network_Internet changed or
    Item Network_Router changed to OFF
then
    if (Network_Internet.state == ON) {
  logInfo("Internetswitchrule", "Internet is back again.")
        if (internetTimer!=null) {
            internetTimer.cancel
            internetTimer=null
        }
        // Just to be sure.
        UG_Hannes_Power_Internet.sendCommand(ON)
    } else if (Network_Internet.state==OFF) {
      logInfo("Internetswitchrule", "Internet is [{}]. Checking network.", Network_Internet.state)
      if ((Network_nas.state == OFF) || (Network_ccu.state == OFF)) {
        logInfo("Internetswitchrule", "NAS [{}], CCU [{}]. Might be something else.", Network_nas.state, Network_ccu.state)
      } else if (Network_acedia.state == OFF) {
        logInfo("Internetswitchrule", "acedia is [{}]. We need a powerswitch here :)", Network_acedia.state)
      } else if (Network_Router.state == OFF) {
        logInfo("Internetswitchrule", "Router is [{}] for some reason. I turn it on.", Network_Router.state)
        UG_Hannes_Power_Internet.sendCommand(ON)
      } else {
        logInfo("Internetswitchrule", "Network is OK. Rebooting modem in 5 Minutes.")
        internetTimer = createTimer(now.plusMinutes(2)) [|
          logInfo("Internetswitchrule", "No Internet since 5 Minutes. powercycle modem.")
          UG_Hannes_Power_Internet.sendCommand(OFF)
          cycleTimer = createTimer(now.plusSeconds(5)) [|
            UG_Hannes_Power_Internet.sendCommand(ON)
          ]
        ]
      }
    }
end
